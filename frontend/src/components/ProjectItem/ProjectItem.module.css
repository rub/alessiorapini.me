.itemWrapper {
  align-items: center;
  cursor: pointer;
  display: flex;
  height: 25vh;
  justify-content: center;
  line-height: 1.25;
  user-select: none;

  &.isMobileVersion {
    height: 100%;
  }

  /* Since we cannot select previous elements, we set them as the default and then overwrite subsequent project siblings */
  & .projectCounter,
  & .heading {
    opacity: 0.25;
    transition: all 0.5s ease-out;
  }

  & .projectCounter {
    color: var(--grey-100);
  }

  /* The hovered element to highlight */
  &:hover .projectCounter {
    color: var(--accent);
    opacity: 1;
  }

  /* At least one input mechanism includes an accurate pointing device */
  /* Includes Desktop/Laptop, Desktop/Laptop + Touchscreen; Touchscreen + Mouse */
  /* Excludes Touchscreen only */
  @media (any-pointer: fine) {
    &:hover .heading {
      color: var(--grey-100);
      opacity: 1;
    }

    /* Highlight every item after the hovered element */
    &:hover ~ & .projectCounter {
      color: var(--grey-300);
      opacity: 0.25;
    }

    /* Highlight every item after the hovered element */
    &:hover ~ & .heading {
      opacity: 0.25;
    }
  }
}

.titleWrapper {
  display: inline-block;
  position: relative;
  white-space: nowrap;
}

.projectCounter {
  color: var(--accent);
  display: inline-block;
  font-size: 3vh;
  letter-spacing: 5px;
  margin-left: -5.5vh;
  position: relative;
  width: 5.5vh;
  z-index: 1;

  @media (max-width: 1080px) {
    font-size: max(2.8vw, 1rem);
    margin-left: max(-2rem, -5.1vw);
    width: max(5.1vw, 2rem);
  }
}

.heading {
  color: var(--grey-100);
  display: inline-block;
  font-size: 14.5vh;
  line-height: 1.1;
  position: relative;
  z-index: 1;

  &::before {
    content: '';
    display: block;
    height: 100%;
    left: -5.5vh;
    position: absolute;
    top: 0;
    width: 5.5vh;
  }

  @media (max-width: 1080px) {
    font-size: 13.5vw;
  }
}

.infoWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  position: relative;
}

.infoBlock {
  font-size: 20px;
  left: calc(100% + 2rem);
  letter-spacing: 5px;
  pointer-events: none;
  position: absolute;
  text-align: left;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1;

  @media (max-width: 1080px) {
    display: none;
  }

  & .infoLine {
    color: var(--grey-300);
    margin-bottom: 10px;
    overflow: hidden;
    text-transform: uppercase;

    & .infoLineText {
      display: block;
      opacity: 0;
      transform: translateY(10px);
      transition: all 0.25s ease-in-out;
      white-space: nowrap;
    }
  }
}

.isActive .infoLine {
  &:nth-child(1n) .infoLineText {
    transition-delay: 0s;
  }
  &:nth-child(2n) .infoLineText {
    transition-delay: 0.1s;
  }
  &:nth-child(3n) .infoLineText {
    transition-delay: 0.2s;
  }
  &:nth-child(4n) .infoLineText {
    transition-delay: 0.3s;
  }
  &:nth-child(5n) .infoLineText {
    transition-delay: 0.4s;
  }

  & .infoLineText {
    transform: translateY(0);
    opacity: 1;
  }
}

.imagesWrapper {
  left: 0;
  opacity: 0;
  pointer-events: none;
  position: fixed;
  top: 0;
  transition: transform 1s cubic-bezier(0.165, 0.84, 0.44, 1),
    opacity 1s cubic-bezier(0.165, 0.84, 0.44, 1);

  &.isMobileVersion {
    position: absolute;
    transition: transform 1s cubic-bezier(0.165, 0.84, 0.44, 1);
    width: auto;
  }

  &.isActive {
    opacity: 1;

    & .imageSlicedLeft,
    & .imageSlicedRight {
      transform: translate3d(0, 0, 0);
    }
  }
}

.imageFixedWrapper {
  display: inline-block;
}

.imageFixed {
  /* Make the wrapper fit the image to better randomize its position */
  aspect-ratio: 3/2;
  height: 40vh;
  max-height: 800px;

  &.isMobileVersion {
    aspect-ratio: 2/3;
    width: auto;
  }

  @media (max-width: 1080px) {
    height: max(60vw, 260px);

    &.isMobileVersion {
      width: max(30vh, 200px);
      height: 100%;
    }
  }
}

/* TODO: Provide backward transition like we did with opacity (see imagesWrapper) */
.imageSlicedLeft,
.imageSlicedRight {
  height: 100%;
  left: 0;
  opacity: 0.5;
  position: absolute;
  top: 0;
  transition: transform 1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.imageSlicedLeft {
  clip-path: polygon(
    0 0,
    100% 0,
    100% 10%,
    0 10%,
    0 20%,
    100% 20%,
    100% 30%,
    0 30%,
    0 40%,
    100% 40%,
    100% 50%,
    0 50%,
    0 60%,
    100% 60%,
    100% 70%,
    0 70%,
    0 80%,
    100% 80%,
    100% 90%,
    0 90%
  );
  transform: translate3d(-5vh, 0, 0);

  @media (max-width: 1080px) {
    transform: translate3d(max(-5vw, -1rem), 0, 0);
  }
}

.imageSlicedRight {
  clip-path: polygon(
    0 10%,
    100% 10%,
    100% 20%,
    0 20%,
    0 30%,
    100% 30%,
    100% 40%,
    0 40%,
    0 50%,
    100% 50%,
    100% 60%,
    0 60%,
    0 70%,
    100% 70%,
    100% 80%,
    0 80%,
    0 90%,
    100% 90%,
    100% 100%,
    0 100%
  );
  transform: translate3d(5vh, 0, 0);

  @media (max-width: 1080px) {
    transform: translate3d(max(5vw, 1rem), 0, 0);
  }
}
